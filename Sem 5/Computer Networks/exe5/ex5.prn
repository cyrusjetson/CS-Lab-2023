Script started on Mon 11 Oct 2021 09:59:38 PM IST

//  ~~~~~~ ARP ~~~~~~
[19bcs150@mepcolinux exe5]$cat ip.txt
172.16.16.200 11:22:33:44:55:66
172.172.172.172 44:dd:aa:ee:ff:22
172.9.9.10 11:aa:22:bb:33:cc
11.10.3.3 99:dd:cc:22:44:11
172.16.16.166 44:cc:22:11:55:66

[19bcs150@mepcolinux client]$cat client.c
#include<stdio.h>
#include<stdlib.h>
#include<sys/types.h>
#include<arpa/inet.h>
#include<string.h>
#include<unistd.h>

int main()
{
   struct sockaddr_in ccin;
   int i=0;
   int len;
   char buf[30];
   char sent[30];
   int ccid = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);
   if(ccid == -1)
       printf("creation failed \n");
   else
   {
      ccin.sin_family=AF_INET;
      ccin.sin_port=htons(30150);
      ccin.sin_addr.s_addr=inet_addr("127.0.0.1");
      printf("creation successful\n");
      int cnct=connect(ccid,(struct sockaddr * ) &ccin, sizeof(ccin));
      if(cnct == -1)
         printf("Connection failed\n");
      else
      {
         printf("Connection successful\n");
         do{
                printf("IP address : ");
                scanf("%s",&sent);
                if(strcmp(sent,"bye")==0)
                    break;
                int snt = send(ccid,sent,30,0);
                if(snt == -1)
                        printf("Transmitted failed\n");
                int resv=recv(ccid,buf,30,0);
                if(resv == -1)
                        printf("msg not received\n");
                else
                        printf("Mac adress : %s\n",buf);
                for(i=0;i<30;i++)
                   buf[i]=' ';
           }while(1);
       }
   }
   int status = close(ccid);
   if(status == 0)
      printf("closed\n");
}
[19bcs150@mepcolinux exe5]$cat server.c
#include<stdio.h>
#include<stdlib.h>
#include<sys/types.h>
#include<arpa/inet.h>
#include<string.h>
#include<unistd.h>
#include<sys/socket.h>

int main()
{
   struct sockaddr_in cin;
   struct sockaddr_in ccin;
   int cid,n,byte,resv,snt;
   char value[32],buf[32],value1[32];
   unsigned int len;
   int i=0,k=0;
   FILE *f1;
   cid = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);
   if(cid == -1)
       perror("socket error");
   else
   {
       printf("creation successful\n");
       cin.sin_family = AF_INET;
       cin.sin_port=htons(30150);
       cin.sin_addr.s_addr=inet_addr("127.0.0.1");
       if(bind(cid,(struct sockaddr *) &cin ,sizeof(cin)) == -1 )
       {
            printf("bind failed\n");
       }else
       {
            printf("binding successful\n");
            int listen1=listen(cid,0);
            if(listen1 == -1){
                 printf("Listen failed\n");
            }else
            {
                 printf("Listen successful\n");
                 int n=sizeof(ccin);
                 int asid = accept(cid,(struct sockaddr *) &ccin , &n);
                 if(asid == -1)
                    printf("not accepted\n");
                 else
                 {
                    printf("Accepted\n");
                    while(1)
                    {
                           k = 0;
                           f1 = fopen("ip.txt","r");
                           resv = recv(asid,buf,30,0);
                           if(strcmp(buf,"bye")==0)
                                  break;
                           do
                           {
                             fscanf(f1,"%s %s\n",value,value1);
                             if(strcmp(buf,value)==0)
                             {
                                 snt=send(asid,value1,30,0);
                                 printf("IP available\n");
                                 k++;
                             }
                           }while(!feof(f1));
                           fclose(f1);
                           if(k==0)
                           {
                                 printf("IP not available\n");
                                 snt=send(asid,"Mac not found",30,0);
                           }
                    }
                 }
             }
          }
      }
}

//   ~~~~~ Output ~~~~~~
//   ~~ server ~~
[19bcs150@mepcolinux exe5]$./a.out
creation successful
binding successful
Listen successful
Accepted
IP not available
IP available
IP not available
IP not available

//   ~~ Client ~~
[19bcs150@mepcolinux client]$./a.out
creation successful
Connection successful
IP address : 172
Mac adress : Mac not found
IP address : 172.9.9.10
Mac adress : 11:aa:22:bb:33:cc
IP address : bye
closed

[19bcs150@mepcolinux exe5]$exit
exit

Script done on Mon 11 Oct 2021 09:59:41 PM IST
