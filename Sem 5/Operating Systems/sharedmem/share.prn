Script started on Fri 29 Oct 2021 07:58:58 AM IST
// msgqueue
[19bcs150@mepcolinux ipcque]$cat msgq.c
#include <stdio.h>
#include <sys/ipc.h>
#include <sys/msg.h>

char*revc(char[10]);

struct mesg_buffer
{
    long mesg_type;
    char mesg_text[100];
}message;

int main()
{
    int msgid,i,m,j,fid;
    char temp;
    char arr[100],buffer[100];
    fid = fork();
    if(fid==0)
    {
         msgid = msgget(3163,0666|IPC_CREAT);
         message.mesg_type = 1;
         msgrcv(msgid, &message, sizeof(message), 1, 0);
         j = strlen(message.mesg_text);
         strcpy(buffer,message.mesg_text);
         int k=0;
         int len=strlen(buffer);
         for(i=len-1;i>=0;i--)
             arr[k++]=buffer[i];
         arr[k]='\0';
         printf("Recived Message : %s\n",arr);
    }
    else
    {
       msgid = msgget(3163,0666|IPC_CREAT);
       printf("Enter   Message : ");
       scanf("%s",&message.mesg_text);
       message.mesg_type = 1;
       msgsnd(msgid, &message, sizeof(message), 0);
    }
    msgctl(msgid, IPC_RMID, NULL);
    return 0;
}
[19bcs150@mepcolinux ipcque]$./a.out
Enter   Message : helloeveryone
Recived Message : enoyreveolleh

// shared memory
[19bcs150@mepcolinux read]$cat read.c
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<sys/shm.h>
#include<string.h>
int main()
{
int i;
void* shared_memory;
char buffer[100];
int shmid;
char arr[100];
shmid=shmget((key_t)173,1024,0666);
printf("Shared memory ID:%d\n",shmid);
shared_memory=shmat(shmid,NULL,0); //process attached to shared memory segment
strcpy(buffer,(char *)shared_memory);
int k=0;
int len=strlen(buffer);
for(i=len-1;i>=0;i--)
arr[k++]=buffer[i];
arr[k]='\0';
printf("Process attached at %p\n",shared_memory);
printf("The reversed data from memory is: %s\n",arr);
}
[19bcs150@mepcolinux sharedmem]$cat write.c
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<sys/shm.h>
#include<string.h>
int main()
{
int i;
void *shared_memory;
char buff[100];
int shmid;
shmid=shmget((key_t)173,1024,0666|IPC_CREAT);
printf("The shared memory id: %d\n",shmid);
shared_memory=shmat(shmid,NULL,0); //process attached to shared memory segment
printf("Process attached at %p\n",shared_memory); //this prints the address where the segment is attached with this process
printf("Enter some data to write to shared memory\n");
read(0,buff,100); //get some input from user
strcpy(shared_memory,buff); //data written to shared memory
printf("\nData written into memory");
}

// Output
// write
[19bcs150@mepcolinux sharedmem]$./a.out
The shared memory id: 163855
Process attached at 0x7f6ff3e74000
Enter some data to write to shared memory
hello

Data written into memory
// read
[19bcs150@mepcolinux read]$./a.out
Shared memory ID:163855
Process attached at 0x7f2e7b5f0000
The reversed data from memory is:
olleh

[19bcs150@mepcolinux sharedmem]$exit
exit

Script done on Fri 29 Oct 2021 07:59:00 AM IST
