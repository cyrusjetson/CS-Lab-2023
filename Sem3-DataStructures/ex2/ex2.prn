Script started on Fri 19 Feb 2021 12:15:33 AM IST
//Jetson Cyrus J
//19bcs150
[19bcs150@mepcolinux ex2]$cat LL.h
#include<string>
using namespace std;
class Student
{
  string name;
  int rollNo;
  float cgpa;
  friend class Node;
  friend class A_List;
  public:
    void setDetails(string,int,float);
    string getName();
    int getRoll();
    float getCgpa();
};

class Node
{
   public:
     Student data;
     Node *next;
     Node();
     Node(string,int,float);
};

class L_List
{
  public:
    Node *first;
    L_List();
    bool isEmpty();
    bool insertAtFirst(Node *NewNode);
    bool insertAtLast(Node *NewNode);
    bool insertByPosition(int,Node *NewNode);
    bool deleteAtFirst();
    bool deleteAtLast();
    bool deleteByPosition(int);
    bool makeListEmpty();
    int getPositionOfElement(int);
    int displayAll();
};
[19bcs150@mepcolinux ex2]$cat LLimp.cpp
#include"LL.h"
#include<iostream>
#include<cstring>
using namespace std;
Node::Node()
{
  data.name="";
  data.rollNo=-1;
  data.cgpa=-1;
}

Node::Node(string Name,int RollNo,float Cgpa)
{
  data.name=Name;
  data.rollNo=RollNo;
  data.cgpa=Cgpa;
  next=NULL;
}

string Student::getName()
{
  return name;
}

int Student::getRoll()
{
  return rollNo;
}

float Student::getCgpa()
{
  return cgpa;
}

L_List::L_List()
{
  first=NULL;
}

bool L_List::isEmpty()
{
  if(first==NULL)
    return true;
  else
    return false;
}

bool L_List::insertAtFirst(Node *NewNode)
{
  if(isEmpty())
  {
    first=NewNode;
    return true;
  }
  NewNode->next=first;
  first=NewNode;
  return true;
}

bool L_List::insertAtLast(Node *NewNode)
{
  if(isEmpty())
  {
    first=NewNode;
    return true;
  }
  Node *temp=first;
  while(temp->next!=NULL)
  {
    temp=temp->next;
  }
  temp->next=NewNode;
   return true;
}

bool L_List::insertByPosition(int pos,Node *NewNode)
{
  Node *temp=first;
  int i=1;
  if(pos==1)
  {
    insertAtFirst(NewNode);
    return true;
  }
  while(i<pos-1)
  {
    if(temp->next==NULL)
    break;
    cout<<" ";
    temp=temp->next;
    i=i+1;
  }
  if(i==pos-1)
  {
    NewNode->next=temp->next;
    temp->next=NewNode;
    return true;
  }
  return false;
}

bool L_List::deleteAtFirst()
{
  if(!isEmpty())
  {
  Node *temp=first;
  first=first->next;
  delete temp;
  return true;
  }
  return false;
}

bool L_List::deleteAtLast()
{
  if(!isEmpty())
  {
    if(first->next==NULL)
    {
      deleteAtFirst();
      return true;
    }
    Node *temp1=first;
    Node *temp2=temp1;
    while(temp1->next!=NULL)
    {
      temp2=temp1;
      temp1=temp1->next;
    }
    temp2->next=NULL;
    delete temp1;
    return true;
  }
  else
  return false;
}

bool L_List::deleteByPosition(int pos)
{
  Node *temp=first;
  int i=1;
  if(pos==1)
  {
    deleteAtFirst();
    return true;
  }
  Node *temp2=temp;
  while(i<pos)
  {
    if(temp->next==NULL)
    break;
    temp2=temp;
    temp=temp->next;
    i=i+1;
  }
  cout<<"value "<<i<<" ";
  if(i==pos)
  {
    temp2->next=temp->next;
    delete temp;
    return true;
  }
    return false;
}

bool L_List::makeListEmpty()
{
  if(!isEmpty())
  {
    while(first!=NULL)
    deleteAtFirst();
    return true;
  }
  else
     return false;
}

int L_List::getPositionOfElement(int pos)
{
  if(!isEmpty())
  {
    int i=0;
    Node *temp=first;
    while(temp->next!=NULL && temp->data.getRoll()!=pos )
    {
      temp=temp->next;
      i=i+1;
    }
    if(temp->data.getRoll()==pos)
    {
      return i+1;
    }
  }
  else
    return -1;
}

int L_List::displayAll()
{
  Node *temp=first;
  if(temp==NULL)
  {
    cout<<" List is empty \n";
    return 0;
  }
  cout<<"\nStudent Details:\n";
  cout<<"\nRollNo\tCGPA\t Name\n";
  while(temp!=NULL)
  {
    cout<<temp->data.getRoll();
    cout<<"\t"<<temp->data.getCgpa()<<"\t"<<temp->data.getName()<<"\n";
    temp=temp->next;
  }
  return 1;
}

[19bcs150@mepcolinux ex2]$cat LLapp.cpp
#include <stdio.h>
#include <iostream>
#include "LL.h"
#include<cstring>
using namespace std;
int main()
{
  int ch,ele,pos;
  float cgpaTemp;
  bool val;
  string nameTemp;
  L_List obj;
  int end=0;
  do
  {
     cout<<"\n\t~~~ Student Details Management System ~~~ \n\n";
     cout<<"Select which operation you like to perform...\n1.insertAtFirst\n";
     cout<<"2.insertAtLast\n3.insertByPosition\n4.deleteAtFirst\n5.deleteAtLast\n6.deleteByPosition\n";
     cout<<"7.makeListEmpty\n8.GetPosition\n9.displayAll\n10.Exit\nEnter your choice: ";
     cin>>ch;
     end=0;
     if(ch==1)
     {
       cout<<"\nEnter the name: ";
       cin>>nameTemp;
       cout<<"Enter the rollNo Number: ";
       cin>>ele;
       cout<<"Enter the CGPA: ";
       cin>>cgpaTemp;
       Node *NewNode=new Node(nameTemp,ele,cgpaTemp);
       val=obj.insertAtFirst(NewNode);
       if(val==true)
         cout<<"Insertion Is Successfull\n";
       else
         cout<<"Insertion is not possible\n";
     }
     if(ch==2)
     {
       cout<<"Enter the name: ";
       cin>>nameTemp;
       cout<<"Enter the rollNo Number: ";
       cin>>ele;
       cout<<"Enter the CGPA: ";
       cin>>cgpaTemp;
       Node *NewNode=new Node(nameTemp,ele,cgpaTemp);
       val=obj.insertAtLast(NewNode);
       if(val==true)
          cout<<"Insertion Is Successfull\n";
       else
          cout<<"Insertion is not possible\n";
     }
     if(ch==3)
     {
       cout<<"Enter the name: ";
       cin>>nameTemp;
       cout<<"Enter the rollNo Number: ";
       cin>>ele;
       cout<<"Enter the CGPA: ";
       cin>>cgpaTemp;
       Node *NewNode=new Node(nameTemp,ele,cgpaTemp);
       cout<<"\nEnter the position to be inserted: ";
       cin>>pos;
       val=obj.insertByPosition(pos,NewNode);
       if(val==true)
           cout<<"Insertion Is Successfull\n";
       else
          cout<<"Insertion is not possible\n";
     }
     if(ch==4)
     {
       val=obj.deleteAtFirst();
       if(val==true)
          cout<<"Deletion Is Successfull\n";
       else
          cout<<"Deletion is not possible\n";
      }
      if(ch==5)
      {
        val=obj.deleteAtLast();
        if(val==true)
          cout<<"Deletion Is Successfull\n";
        else
       cout<<"Deletion is not possible\n";
     }
     if(ch==6)
     {
        cout<<"\nEnter the position to be deleted: ";
        cin>>pos;
        val=obj.deleteByPosition(pos);
        if(val==true)
           cout<<"Deletion Is Successfull\n";
        else
           cout<<"Deletion is not possible\n";
     }
     if(ch==7)
     {
        val=obj.makeListEmpty();
        if(val==true)
          cout<<"Deletion Is Successfull\n";
       else
          cout<<"List is Already Empty\n";
     }
     if(ch==8)
     {
        int a;
        cout<<"\nEnter the roll number to find position: ";
        cin>>pos;
        a=obj.getPositionOfElement(pos);
        if(a!=-1)
          cout<<"\nThe Position of Given rollNo Number is "<<a<<"\n";
        else
          cout<<"The roll Number is not present\n";
     }
     if(ch==9)
     {
       obj.displayAll();
     }
     if(ch==10)
     {
       end=1;
     }
     if(ch<1 || ch>10)
     {
       cout<<"Enter a valid Input\n";
     }
   }while(end!=1);
 cout<<"\n\tThank You!\n\n";
}

[19bcs150@mepcolinux ex2]$cat makefile
LL.exe: LLimp.o LLapp.o
        g++ -o LL.exe LLimp.o LLapp.o
LLimp.o: LLimp.cpp
        g++ -c LLimp.cpp
LLapp.o: LLapp.cpp
        g++ -c LLapp.cpp
[19bcs150@mepcolinux ex2]$make
make: `LL.exe' is up to date.

[19bcs150@mepcolinux ex2]$./LL.exe

        ~~~ Student Details Management System ~~~

Select which operation you like to perform...
1.insertAtFirst
2.insertAtLast
3.insertByPosition
4.deleteAtFirst
5.deleteAtLast
6.deleteByPosition
7.makeListEmpty
8.GetPosition
9.displayAll
10.Exit
Enter your choice: 11
Enter a valid Input

        ~~~ Student Details Management System ~~~

Select which operation you like to perform...
1.insertAtFirst
2.insertAtLast
3.insertByPosition
4.deleteAtFirst
5.deleteAtLast
6.deleteByPosition
7.makeListEmpty
8.GetPosition
9.displayAll
10.Exit
Enter your choice: 1

Enter the name: Raj
Enter the rollNo Number: 123
Enter the CGPA: 10
Insertion Is Successfull

        ~~~ Student Details Management System ~~~

Select which operation you like to perform...
1.insertAtFirst
2.insertAtLast
3.insertByPosition
4.deleteAtFirst
5.deleteAtLast
6.deleteByPosition
7.makeListEmpty
8.GetPosition
9.displayAll
10.Exit
Enter your choice: 2
Enter the name: Hari
Enter the rollNo Number: 124
Enter the CGPA: 9
Insertion Is Successfull

        ~~~ Student Details Management System ~~~

Select which operation you like to perform...
1.insertAtFirst
2.insertAtLast
3.insertByPosition
4.deleteAtFirst
5.deleteAtLast
6.deleteByPosition
7.makeListEmpty
8.GetPosition
9.displayAll
10.Exit
Enter your choice: 3
Enter the name: Edward
Enter the rollNo Number: 128
Enter the CGPA: 8.3

Enter the position to be inserted: 1
Insertion Is Successfull

        ~~~ Student Details Management System ~~~

Select which operation you like to perform...
1.insertAtFirst
2.insertAtLast
3.insertByPosition
4.deleteAtFirst
5.deleteAtLast
6.deleteByPosition
7.makeListEmpty
8.GetPosition
9.displayAll
10.Exit
Enter your choice: 8

Enter the roll number to find position: 128

The Position of Given rollNo Number is 1

        ~~~ Student Details Management System ~~~

Select which operation you like to perform...
1.insertAtFirst
2.insertAtLast
3.insertByPosition
4.deleteAtFirst
5.deleteAtLast
6.deleteByPosition
7.makeListEmpty
8.GetPosition
9.displayAll
10.Exit
Enter your choice: 9

Student Details:

RollNo  CGPA     Name
128     8.3     Edward
123     10      Raj
124     9       Hari

        ~~~ Student Details Management System ~~~

Select which operation you like to perform...
1.insertAtFirst
2.insertAtLast
3.insertByPosition
4.deleteAtFirst
5.deleteAtLast
6.deleteByPosition
7.makeListEmpty
8.GetPosition
9.displayAll
10.Exit
Enter your choice: 6

Enter the position to be deleted: 2
value 2 Deletion Is Successfull

        ~~~ Student Details Management System ~~~

Select which operation you like to perform...
1.insertAtFirst
2.insertAtLast
3.insertByPosition
4.deleteAtFirst
5.deleteAtLast
6.deleteByPosition
7.makeListEmpty
8.GetPosition
9.displayAll
10.Exit
Enter your choice: 1

Enter the name: mani
Enter the rollNo Number: 120
Enter the CGPA: 8.3
Insertion Is Successfull

        ~~~ Student Details Management System ~~~

Select which operation you like to perform...
1.insertAtFirst
2.insertAtLast
3.insertByPosition
4.deleteAtFirst
5.deleteAtLast
6.deleteByPosition
7.makeListEmpty
8.GetPosition
9.displayAll
10.Exit
Enter your choice: 9

Student Details:

RollNo  CGPA     Name
120     8.3     mani
128     8.3     Edward
124     9       Hari

        ~~~ Student Details Management System ~~~

Select which operation you like to perform...
1.insertAtFirst
2.insertAtLast
3.insertByPosition
4.deleteAtFirst
5.deleteAtLast
6.deleteByPosition
7.makeListEmpty
8.GetPosition
9.displayAll
10.Exit
Enter your choice: 4
Deletion Is Successfull

        ~~~ Student Details Management System ~~~

Select which operation you like to perform...
1.insertAtFirst
2.insertAtLast
3.insertByPosition
4.deleteAtFirst
5.deleteAtLast
6.deleteByPosition
7.makeListEmpty
8.GetPosition
9.displayAll
10.Exit
Enter your choice: 5
Deletion Is Successfull

        ~~~ Student Details Management System ~~~

Select which operation you like to perform...
1.insertAtFirst
2.insertAtLast
3.insertByPosition
4.deleteAtFirst
5.deleteAtLast
6.deleteByPosition
7.makeListEmpty
8.GetPosition
9.displayAll
10.Exit
Enter your choice: 9

Student Details:

RollNo  CGPA     Name
128     8.3     Edward

        ~~~ Student Details Management System ~~~

Select which operation you like to perform...
1.insertAtFirst
2.insertAtLast
3.insertByPosition
4.deleteAtFirst
5.deleteAtLast
6.deleteByPosition
7.makeListEmpty
8.GetPosition
9.displayAll
10.Exit
Enter your choice: 7
Deletion Is Successfull

        ~~~ Student Details Management System ~~~

Select which operation you like to perform...
1.insertAtFirst
2.insertAtLast
3.insertByPosition
4.deleteAtFirst
5.deleteAtLast
6.deleteByPosition
7.makeListEmpty
8.GetPosition
9.displayAll
10.Exit
Enter your choice: 10

        Thank You!

[19bcs150@mepcolinux ex2]$exit
exit

Script done on Fri 19 Feb 2021 12:15:36 AM IST
