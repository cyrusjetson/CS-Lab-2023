Script started on Thursday 05 March 2020 09:59:19 AM IST
[19bcs150@mepcolinux exe2]$cd exe2a
[19bcs150@mepcolinux exe2a]$cat sort.h
int* Sort(int*,int);
float* Sort(float*,int);
char* Sort(char*,int);
[19bcs150@mepcolinux exe2a]$cat reverse.h
int Reverse(int);
char* Reverse(char*,int);
[19bcs150@mepcolinux exe2a]$cat sortimp.cpp
#include"sort.h"
int* Sort(int *a,int n)
{
   int i,j,temp;
   int *b=new int[n];
   for(i=0;i<n;i++)
       b[i]=a[i];
   for(i=0;i<n-1;i++)
   {
     for(j=i+1;j<n;j++)
     {
        if(b[i]>b[j])
        {
            temp=b[j];
            b[j]=b[i];
            b[i]=temp;      
        }     
     }
   }
   return b;
}
float* Sort(float *a,int n)
{
   int i,j;
   float temp;
   float *b=new float[n];
   for(i=0;i<n;i++)
       b[i]=a[i];
   for(i=0;i<n-1;i++)
   {
     for(j=i+1;j<n;j++)
     {
        if(b[i]>b[j])
        {
            temp=b[j];
            b[j]=b[i];
            b[i]=temp;
        }
     }
   }
   return b;
}
char* Sort(char *a,int n)
{
   int i,j;
   char temp;
   char *b=new char[n];
   for(i=0;i<n;i++)
       b[i]=a[i];
   for(i=0;i<n-1;i++)
   {
     for(j=i+1;j<n;j++)
     {
        if(b[i]>b[j])
        {
            temp=b[j];
            b[j]=b[i];
            b[i]=temp;
        }
     }
   }
   return b;
}
[19bcs150@mepcolinux exe2a]$cat reverseimp.cpp
#include"reverse.h"
int Reverse(int n)
{
  int r,sum=0;
  while(n!=0)
  {
     r=n%10;
     sum=sum*10+r;
     n=n/10;
  }
  return sum;
}
char* Reverse(char* x,int n)
{
    char *a=new char[n+1];
    int i,j;
    j=n-1;
    for(i=0;i<n;i++)
    {
       a[i]=x[j];
       j--;
    }
    a[i]='\0';
    return a;
}
[19bcs150@mepcolinux exe2a]$cat app.cpp
#include<iostream>
using namespace std;
#include"sort.h"
#include"reverse.h"
int main()
{
  int ch,m;
  cout<<"\n          Welcome\n\n";
  cout<<"         Function Overloading \n";
  do
  {
    cout<<"MENU:\n";
    cout<<"  1. Sorting.\n";
    cout<<"  2. Reverse.\n";
    cout<<"  3. Exit.\n";
    cout<<"Enter a Choice:\n";
    cin>>ch;
    if(ch==1)
    {
       int ch1,n,i;
       cout<<"\n           Sorting   \n";
       do
       {
         cout<<"MENU:\n";
         cout<<"  1.  Integer\n";
         cout<<"  2.  Float\n";
         cout<<"  3.  Char\n";
         cout<<"  4.  Exit\n";
         cout<<"Enter The Option:\n";
         cin>>ch1;
         if(ch1==1)
         {         
               cout<<"Enter the no of elements:\n";
               cin>>m;
               int *arr = new int[m];
               int *b=new int[m];
               cout<<"Enter the element:\n";
               for(i=0;i<m;i++)
                    cin>>arr[i];
               b=Sort(arr,m);
                cout<<"Sort Indeger:\n";  
                for(i=0;i<m;i++)
                    cout<<b[i]<<"\n";
         }
         else if(ch1==2)
         {
              cout<<"Enter the no.of elements:\n";
      	      int s;
              cin>>s;
              float *flo = new float[s];
              float *c = new float[s];
              cout<<"Enter the element:\n";
              for(i=0;i<s;i++)
                    cin>>flo[i];
              c=Sort(flo,s);
              cout<<"Sort Float:\n"; 
              for(i=0;i<s;i++)
                cout<<c[i]<<"\n";
         }
         else if(ch1==3)
         {
             cout<<"Enter the no of elements:\n";
             cin>>n;
             char *chr = new char[n];
             char *d = new char[n];
             cout<<"Enter the element:\n";
             for(i=0;i<n;i++)
                   cin>>chr[i];
             d=Sort(chr,n);
             cout<<"Sort Character:\n";
             for(i=0;i<n;i++)
                  cout<<d[i]<<"\n";
         }
         else if(ch1==4);
         else
             cout<<"     Invalid Option\n"; 
       }while(ch1!=4);
    }
    else if(ch==2)
    {
      int ch3;
      cout<<"\n        Reverse  \n";
      do
      {
        cout<<"MENU:\n";
        cout<<"  1. Integer\n";
        cout<<"  2. String\n";
        cout<<"  3. Exit\n";
        cout<<"Enter The Option:\n";
        cin>>ch3;
        if(ch3==1)
        {
          cout<<"Enter The Number:\n";
          int e,o;
          cin>>e;
          o=Reverse(e);
          cout<<"Reverse:   "<<o<<"\n";
        }
        else if(ch3==2)
        {
          int n,j;
          cout<<"Enter the length:\n";
          cin>>n;
          char *str=new char[n+1];
          cout<<"Enter the String:\n";
          cin>>str;
          char *a=new char[n+1];
          a=Reverse(str,n);
          cout<<"reverse:\n";
          for(j=0;j<n;j++)
                cout<<a[j];
          cout<<"\n";
         }
         else if(ch3==3);
         else
            cout<<"     Invalid Option\n"; 
       }while(ch3!=3);     
    }
    else if(ch==3)
      cout<<"\n          Good Bye\n\n";
      return 0;
    else
      cout<<"\n        Enter correct input\n";
  }while(ch!=3);
      return 0;
}
[19bcs150@mepcolinux exe2a]$cat makefile
exe2a.exe: sortimp.o  reverseimp.o app.o
	g++ -o exe2a.exe sortimp.o reverseimp.o app.o
reverseimp.o: reverseimp.cpp
	g++ -c reverseimp.cpp
sortimp.o: sortimp.cpp
	g++ -c sortimp.cpp
app.o: app.cpp
	g++ -c app.cpp
[19bcs150@mepcolinux exe2a]$./exe2a.exe

          Welcome

         Function Overloading 
MENU:
  1. Sorting.
  2. Reverse.
  3. Exit.
Enter a Choice:
1

           Sorting   
MENU:
  1.  Integer
  2.  Float
  3.  Char
  4.  Exit
Enter The Option:
1
Enter the no of elements:
3
Enter the element:
4 -6 3
Sort Indeger:
-6
3
4
MENU:
  1.  Integer
  2.  Float
  3.  Char
  4.  Exit
Enter The Option:
2
Enter the no.of elements:
3
Enter the element:
-0.5 1.6 1.2
Sort Float:
-0.5
1.2
1.6
MENU:
  1.  Integer
  2.  Float
  3.  Char
  4.  Exit
Enter The Option:
3
Enter the no of elements:
6
Enter the element:
j e t s o n
Sort Character:
e
j
n
o
s
t
MENU:
  1.  Integer
  2.  Float
  3.  Char
  4.  Exit
Enter The Option:
4
MENU:
  1. Sorting.
  2. Reverse.
  3. Exit.
Enter a Choice:
2

        Reverse  
MENU:
  1. Integer
  2. String
  3. Exit
Enter The Option:
1
Enter The Number:
123
Reverse:   321
MENU:
  1. Integer
  2. String
  3. Exit
Enter The Option:
2
Enter the length:
6
Enter the String:
jetson
reverse:
nostej
MENU:
  1. Integer
  2. String
  3. Exit
Enter The Option:
3
      Good Bye
[19bcs150@mepcolinux exe2a]$cd ..
[19bcs150@mepcolinux exe2]$cd exe2b
[19bcs150@mepcolinux exe2b]$cat matrix.h
int** Slice(int**,int=2,int=2);
[19bcs150@mepcolinux exe2b]$cat maximum.h
int Maxout(int*,int);
int Maxwith(int*,int);
[19bcs150@mepcolinux exe2b]$cat matriximp.cpp
#include"matrix.h"
int** Slice(int **ar,int r,int c)
{
int **b,i,j;
b=new int*[r];
for(i=0;i<r;i++)
b[i]=new int[c];
for(i=0;i<r;i++)
{
  for(j=0;j<c;j++)
  {
    b[i][j]=ar[i][j];
  }
}
return b;
}
[19bcs150@mepcolinux exe2b]$cat maximumimp.cpp
#include"maximum.h"
int Maxwith(int *a,int n)
{
  int i;
  long int l=a[0];
  for(i=0;i<n;i++)
     if(a[i]>l)
        l=a[i];
  return l;
}
int Maxout(int *a,int n)
{
  int i,*b;
  long int l=a[0];
  b=new int[n];
  for(i=0;i<n;i++)
     b[i]=a[i];
  for(i=0;i<n;i++)
    if(b[i]<0)
      b[i]=b[i]*(-1);
  for(i=0;i<n;i++)
     if(b[i]>l)
       l=b[i];
  return l;
}
[19bcs150@mepcolinux exe2b]$cat app.cpp
#include"matrix.h"
#include"maximum.h"
#include<iostream>
using namespace std;
int main()
{
   int ch;
   cout<<"\n          Welcome \n\n";
   cout<<"       Default Argument\n";
   do
   {
      cout<<"MENU:\n";
      cout<<"   1. Find Maximum\n";
      cout<<"   2. Slice Matrix\n";
      cout<<"   3. Exit\n";
      cout<<"Enter your choice:\n";
      cin>>ch;
      if(ch==1)
      {
         int ch1,n,i;
         cout<<"\n        Find Maximum \n";
         cout<<"Enter the no of elements:\n";
         cin>>n;
         int *a=new int[n];
         cout<<"Enter the elements:\n";
         for(i=0;i<n;i++)
           cin>>a[i];
         do
         {
                cout<<"Menu:\n";
		cout<<"   1. With sign parameter\n";
		cout<<"   2. Without sign parameter\n";
		cout<<"   3. Exit\n";
		cout<<"Enter Your Option:\n";
		cin>>ch1;
		if(ch1==1)
		{
		   cout<<"\nThe Maximum:     ";
		   cout<<Maxwith(a,n)<<"\n";
		}
		else if(ch1==2)
		{
		   cout<<"\nThe Maximum:    ";
		   cout<<Maxout(a,n)<<"\n";
		}
	 }while(ch1!=3);
      }
      else if(ch==2)
      { int r,c;
        cout<<"\n          Slice Matrix\n";
        cout<<"Enter the no of rows\n";
        cin>>r;
        cout<<"Enter the no of coloums\n";
        cin>>c;
	int ch3,i,j;
        int **b=new int*[r];
        for(i=0;i<r;i++)
            b[i]=new int[c];
        cout<<"Enter the elements for matrix\n";
        for(i=0;i<r;i++)
            for(j=0;j<c;j++)
                cin>>b[i][j];
        do
        {
	      cout<<"MENU:\n";
	      cout<<"    1. With rows and columns\n";
  	      cout<<"    2. With row only\n";
	      cout<<"    3. Without rows and columns\n";
	      cout<<"    4. Exit\n";
	      cout<<"Enter your Option:\n";
	      cin>>ch3;
	      if(ch3==3)
	      {
		cout<<"\nYour Matrix:"<<"\n";
                int **s=new int*[r];
                for(i=0;i<r;i++)
                      s[i]=new int[c]; 
                s=Slice(b);
                for(i=0;i<2;i++)
                {
                    for(j=0;j<2;j++)
                         cout<<" "<<s[i][j];
                    cout<<"\n";
                }
     	      }
	      else if(ch3==1)
	      {
                int r1,c1;
   		cout<<"Enter the row and column:\n";
                cin>>r1>>c1;
                int **s=new int*[r1];
                for(i=0;i<r1;i++)
                      s[i]=new int[c1];
                s=Slice(b,r1,c1);
                cout<<"\n";
                for(i=0;i<r1;i++)
                {
                    for(j=0;j<c1;j++)
                         cout<<" "<<s[i][j];
                    cout<<"\n";
                }
             }
             else if(ch3==2)
             {
		int r3;
		cout<<"Enter the Row:\n";
		cin>>r3;
		int **h=new int*[r3];
  		for(i=0;i<r3;i++)
		   h[i]=new int[c];
		h=Slice(b,r3);
		for(i=0;i<r3;i++)
		{
		    for(j=0;j<2;j++)
                          cout<<" "<<h[i][j];
                    cout<<"\n";
 		}
             }

	}while(ch3!=4);
      }
      else if(ch==3)
      {
         cout<<"\n     Good Bye \n";
      }
      else
      {
        cout<<"\n    Enter correct option \n";
      }
   }while(ch!=3);
}
[19bcs150@mepcolinux exe2b]$cat makefile
exe2b.exe: matriximp.o  maximumimp.o app.o
	g++ -o exe2b.exe matriximp.o maximumimp.o app.o
maximumimp.o: maximumimp.cpp
	g++ -c maximumimp.cpp
matriximp.o: matriximp.cpp
	g++ -c matriximp.cpp
app.o: app.cpp
	g++ -c app.cpp
[19bcs150@mepcolinux exe2b]$./exe2b.exe

          Welcome 

       Default Argument
MENU:
   1. Find Maximum
   2. Slice Matrix
   3. Exit
Enter your choice:
1

        Find Maximum 
Enter the no of elements:
4
Enter the elements:
4 -4 5 3 
Menu:
   1. With sign parameter
   2. Without sign parameter
   3. Exit
Enter Your Option:
1

The Maximum:     5
Menu:
   1. With sign parameter
   2. Without sign parameter
   3. Exit
Enter Your Option:
2

The Maximum:    5
Menu:
   1. With sign parameter
   2. Without sign parameter
   3. Exit
Enter Your Option:
3
MENU:
   1. Find Maximum
   2. Slice Matrix
   3. Exit
Enter your choice:
2

          Slice Matrix
Enter the no of rows
3
Enter the no of coloums
3
Enter the elements for matrix
3
6
4
-3
2
5
4
3
2
MENU:
    1. With rows and columns
    2. With row only
    3. Without rows and columns
    4. Exit
Enter your Option:
1
Enter the row and column:
2
3

 3 6 4
 -3 2 5
MENU:
    1. With rows and columns
    2. With row only
    3. Without rows and columns
    4. Exit
Enter your Option:
2
Enter the Row:
2
 3 6 
 -3 2 
MENU:
    1. With rows and columns
    2. With row only
    3. Without rows and columns
    4. Exit
Enter your Option:
3

Your Matrix:
 3 6
 -3 2
MENU:
    1. With rows and columns
    2. With row only
    3. Without rows and columns
    4. Exit
Enter your Option:
4
MENU:
   1. Find Maximum
   2. Slice Matrix
   3. Exit
Enter your choice:
3

     Good Bye 
[19bcs150@mepcolinux exe2]$exit
exit
Script done on Thursday 05 March 2020 09:59:24 AM IST
