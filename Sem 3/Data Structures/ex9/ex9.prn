Script started on Mon 22 Feb 2021 08:34:21 PM IST
[19bcs150@mepcolinux ex9]$cat head.h
#include<iostream>
#include<stdlib.h>
#include<string.h>
using namespace std;
class Student
{
  char name[20];
  int ID;
  int cgpa;
  friend class HashTable;
  public:
    Student();
    Student(char*,int,float);
    Student(const Student&);
    int getID();
    void dispDetails();
};

class HashTable
{
  public:
    HashTable();
    int hash(int);
    int insert(Student);
    int remove(int);
    int search(int);
    Student findElement(int);
    void display();
  private:
    int capacity;
    int size;
    Student *s;
};

[19bcs150@mepcolinux ex9]$cat imp.cpp
#include"head.h"
Student::Student()
{
  strcpy(name,"null");
  ID=0;
  cgpa=0;
}

Student::Student(char*d,int n,float f)
{
  strcpy(name,d);
  ID=n;
  cgpa=f;
}

Student::Student(const Student &f)
{
  strcpy(name,f.name);
  ID=f.ID;
  cgpa=f.cgpa;
}

int Student::getID()
{
  return ID;
}

void Student::dispDetails()
{
  cout<<ID<<"\t"<<name<<"\t"<<cgpa<<"\n";
}

HashTable :: HashTable()
{
  capacity =10;
  s= new Student[capacity];
  size =0;
}

int HashTable :: hash(int ID)
{
  return ID%10;
}

int HashTable::insert(Student emp)
{
        if(size==capacity)
                return -1;
        int hashval=hash(emp.getID());
        while(s[hashval].getID()!=0 && s[hashval].getID()!=emp.getID())
        {
                hashval=hash(hashval+1);
        }
        if(s[hashval].getID()==emp.getID())
                return -2;
        s[hashval]=emp;
        size++;
        return 1;
}

int HashTable::remove(int ID)
{
        if(size==0)
                return -1;
  int hashval=hash(ID);
  int flag=0;
  while(flag <= hashval)
  {
     if(s[hashval].getID()!=ID)
     {
         hashval=hash(hashval+1);
         flag++;
         continue;
     }
     else
     {
       s[hashval].~Student();
       return 1;
     }
  }
  return -2;
}

int HashTable::search(int ID)
{
  if(size==0)
    return -1;
  int hashval=hash(ID);
  int flag=1;
  while(flag <= hashval)
  {
    if(s[hashval].getID()!=ID)
    {
      hashval=hash(hashval+1);
      continue;
    }
    else
      return 1;
    flag++;
  }
  return -2;
}

Student HashTable::findElement(int ID)
{
  Student emp;
  if(size==0)
    return emp;
  int hashval=hash(ID);
  int flag=1;
  while(flag <= hashval)
  {
    if(s[hashval].getID()!=ID)
    {
       hashval=hash(hashval+1);
       continue;
    }
    else
      return s[hashval];
    flag++;
  }
  return emp;
}

void HashTable::display()
{
  if(size==0)
    cout<<"No Students in the list\n";
  else
  {
    int i;
    for(i=0;i<size;i++)
      s[i].dispDetails();
  }
}
[19bcs150@mepcolinux ex9]$cat app.cpp
#include"head.h"
int main()
{
  char name[20];
  int ID;
  float f;
  HashTable h;
  int ch=0;
  while(true)
  {
     cout<<"\n Enter 1 to insert a Student.";
     cout<<"\n Enter 2 to remove a Student.";
     cout<<"\n Enter 3 to search a Student by ID.";
     cout<<"\n Enter 4 to find an Student.";
     cout<<"\n Enter 5 to display Student details.";
     cout<<"\n Enter 6 to exit.";
     cout<<"\n Enter your option : ";
     cin>>ch;
     switch(ch)
     {
       case 1:
       {
         cout<<"\n Enter the name of the Student: ";
         cin>>name;
         cout<<"\n Enter ID: ";
         cin>>ID ;
         cout<<"\n Enter CGPA: ";
         cin>>f;
         Student s(name,ID,f);
         int temp=h.insert(s);
         if(temp==1)
            cout<<"\n Student inserted.";
         else if(temp== -1)
            cout<<"\n List is full.";
         else
            cout<<"\n Duplicate Student cannot be inserted.";
         break;
     }
     case 2:
     {
        int ID;
        cout<<"\n Enter the ID of the Student to be removed.";
        cin>>ID;
        int temp=h.remove(ID);
        if(temp == -1)
           cout<<"\n List is empty.\n";
        else if (temp == -2)
            cout<<"\n Student not found.";
        else
            cout<<"\n Student deleted.";
        break;
    }
    case 3:
    {
       int ID;
       cout<<"\n Enter the ID of the Student to be searched.";
       cin>>ID;
       int temp=h.search(ID);
       if(temp == -1)
          cout<<"\n List is empty.";
       else if (temp == -2)
          cout<<"\n Student not found.";
       else
          cout<<"\n Student found.";
       break;
   }
   case 4:
   {
      int ID;
      cout<<"\n Enter the ID of the Student to be searched.";
      cin>>ID;
      Student s=h.findElement(ID);
      if(s.getID() == 0)
        cout<<"\n Student not found.";
      else
      {
        cout<<"\n ID \t Name \t CGPA \n";
        s.dispDetails();
      }
      break;
   }
   case 5:
   {
      cout<<"\n ID \t Name \t CGPA\n";
      h.display();
      break;
   }
   case 6:
      exit(0);
   default:
      cout<<"\n Invalid input.\n";
   }
 }
}
[19bcs150@mepcolinux ex9]$cat makefile
ex9.exe: imp.o app.o
        g++ -o ex9.exe imp.o app.o
avlimp.o: imp.cpp
        g++ -c imp.cpp
app.o: app.cpp
        g++ -c app.cpp
[19bcs150@mepcolinux ex9]$./ex9.exe

 Enter 1 to insert a Student.
 Enter 2 to remove a Student.
 Enter 3 to search a Student by ID.
 Enter 4 to find an Student.
 Enter 5 to display Student details.
 Enter 6 to exit.
 Enter your option : 1

 Enter the name of the Student: Hari
 Enter ID: 123
 Enter CGPA: 9.2

 Student inserted.
 Enter 1 to insert a Student.
 Enter 2 to remove a Student.
 Enter 3 to search a Student by ID.
 Enter 4 to find an Student.
 Enter 5 to display Student details.
 Enter 6 to exit.
 Enter your option : 1

 Enter the name of the Student: Ravi
 Enter ID: 124
 Enter CGPA: 8.1

 Student inserted.
 Enter 1 to insert a Student.
 Enter 2 to remove a Student.
 Enter 3 to search a Student by ID.
 Enter 4 to find an Student.
 Enter 5 to display Student details.
 Enter 6 to exit.
 Enter your option : 1

 Enter the name of the Student: Jet
 Enter ID: 125
 Enter CGPA: 7.2

 Student inserted.
 Enter 1 to insert a Student.
 Enter 2 to remove a Student.
 Enter 3 to search a Student by ID.
 Enter 4 to find an Student.
 Enter 5 to display Student details.
 Enter 6 to exit.
 Enter your option : 3

 Enter the ID of the Student to be searched.125

 Student found.
 Enter 1 to insert a Student.
 Enter 2 to remove a Student.
 Enter 3 to search a Student by ID.
 Enter 4 to find an Student.
 Enter 5 to display Student details.
 Enter 6 to exit.
 Enter your option : 4

 Enter the ID of the Student to be searched.125

 ID      Name    CGPA
125     Jet     7.2

 Enter 1 to insert a Student.
 Enter 2 to remove a Student.
 Enter 3 to search a Student by ID.
 Enter 4 to find an Student.
 Enter 5 to display Student details.
 Enter 6 to exit.
 Enter your option : 5

 ID      Name    CGPA
123       Hari    9.2
124       Ravi    8.2
125       Jet    7.2

 Enter 1 to insert a Student.
 Enter 2 to remove a Student.
 Enter 3 to search a Student by ID.
 Enter 4 to find an Student.
 Enter 5 to display Student details.
 Enter 6 to exit.
 Enter your option : 2

 Enter the ID of the Student to be removed.125

 Student deleted.
 Enter 1 to insert a Student.
 Enter 2 to remove a Student.
 Enter 3 to search a Student by ID.
 Enter 4 to find an Student.
 Enter 5 to display Student details.
 Enter 6 to exit.
 Enter your option : 6
[19bcs150@mepcolinux ex9]$exit
exit

Script done on Mon 22 Feb 2021 08:34:24 PM IST
