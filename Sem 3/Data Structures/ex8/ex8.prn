Script started on Mon 22 Feb 2021 08:04:37 PM IST
[19bcs150@mepcolinux ex8]$cat head.h
#include<iostream>
#include<string.h>
#include<stdlib.h>
using namespace std;

class Student
{
  char name[20];
  int ID;
  float cgpa;
  friend class BinHeap;
  public:
    Student();
    Student(char*,int,float);
    Student(const Student&);
    int getID();
    void dispDetails();
};


class BinHeap
{
  public:
    BinHeap();
    int isEmpty();
    int isFull();
    int enqueue(Student);
    Student dequeue();
    Student findMin();
    int search(int);
    void display();
  private:
    Student *s;
    int capacity,hsize;
};
[19bcs150@mepcolinux ex8]$cat imp.cpp
#include"head.h"
Student::Student()
{
  strcpy(name,"null");
  ID=0;
  cgpa=0;
}

Student::Student(char*d,int n,float f)
{
  strcpy(name,d);
  ID=n;
  cgpa=f;
}

Student::Student(const Student &f)
{
  strcpy(name,f.name);
  ID=f.ID;
  cgpa=f.cgpa;
}

int Student::getID()
{
 return ID;
}

void Student::dispDetails()
{
  cout<<ID<<" \t "<<name<<" \t "<<cgpa;
}

BinHeap::BinHeap()
{
  hsize=0;
  capacity=20;
  s=new Student[capacity+1];
}

int BinHeap::isEmpty()
{
  return(hsize==0);
}

int BinHeap::isFull()
{
  return(capacity==hsize);
}

int BinHeap::enqueue(Student emp)
{
  if(isFull())
    return -1;
  else
  {
    int ctnode =++hsize;
    while(ctnode!=1 && s[ctnode/2].ID>emp.ID)
    {
      s[ctnode]=s[ctnode/2];
      ctnode/=2;
    }
    s[ctnode]=emp;
    return 1;
  }
}

Student BinHeap::dequeue() //remove an element (delete min)
{
  if(isEmpty())
  {
    Student s;
    return s;
  }
  else{
    Student temp=s[1];
    Student last=s[hsize--];
    int low_child=2;
    int ctnode=1;
    while(low_child <= hsize)
    {
      if(low_child<hsize && s[low_child].ID>s[low_child+1].ID)
      low_child++;
      if(last.ID<=s[low_child].ID) //last element replaced is the min element
        break;
      s[ctnode]=s[low_child];
      ctnode=low_child;
      low_child=ctnode*2;
    }
    s[ctnode]=last;
    return temp;
  }
}

Student BinHeap::findMin() //find minimum element
{
  if(!isEmpty())
    return s[1];
  else
  {
    Student temp;
    return temp;
  }
}

int BinHeap::search(int id) //search an element by id
{
  int i;
  for(i=1;i<=hsize;i++)
    if(s[i].ID==id)
      {
        s[i].dispDetails();
        return 1; //Student found
      }
  return -1; //Student not found
}

void BinHeap::display() //display the heap
{
  if(isEmpty())
    cout<<"List is Empty\n";
  else
  {
    int i;
    for(i=1;i<=hsize;i++)
    {
      s[i].dispDetails();
      cout<<"\n";
    }
  }
}

[19bcs150@mepcolinux ex8]$cat app.cpp
#include"head.h"
int main()
{
  char name[20];
  int id;
  float cgpa;
  BinHeap h;
  int ch=0;
  while(true){
   cout<<"\n 1.Insert an Student.";
   cout<<"\n 2.Delete an Student.";
   cout<<"\n 3.Find the first Student.";
   cout<<"\n 4.search an Student by id.";
   cout<<"\n 5.Display all the Student details.";
   cout<<"\n 6.exit.";
   cout<<"\n Enter your choice of interest : ";
   cin>>ch;
   switch(ch)
   {
     case 1:
     {
       cout<<"\n Enter the name of the Student: ";
       cin>>name;
       cout<<"\n Enter ID: ";
       cin>>id ;
       cout<<"\n Enter CGPA: ";
       cin>>cgpa;
       Student s(name,id,cgpa);
       if(h.enqueue(s)==1)
         cout<<"\n Student inserted.";
       else
         cout<<"\n List is full.";
       break;
     }
     case 2:
     {
       Student s=h.dequeue();
       if(s.getID()==0)
         cout<<"\n List is empty.";
       else
         s.dispDetails();
       break;
     }
     case 3:
     {
       Student temp=h.findMin();
       if(temp.getID()==0)
         cout<<"\n List is empty.";
       else
         temp.dispDetails();
       break;
     }
     case 4:
     {
       int id;
       cout<<"\n Enter the id of the Student to be searched.";
       cin>>id;
       if(h.search(id)==-1)
         cout<<"\n Student details missing.";
       else
         cout<<"\n Student details present.";
       break;
     }
     case 5:
     {
       cout<<"\n ID \t Name \t CGPA\n ";
       h.display();
       break;
     }
     case 6:
        exit(0);
     default:
        cout<<"\n Invalid input.\n";
    }
  }
}

[19bcs150@mepcolinux ex8]$cat makefile
ex8.exe: imp.o app.o
        g++ -o ex8.exe imp.o app.o
avlimp.o: imp.cpp
        g++ -c imp.cpp
app.o: app.cpp
        g++ -c app.cpp
[19bcs150@mepcolinux ex8]$./ex8.exe

 1.Insert an Student.
 2.Delete an Student.
 3.Find the first Student.
 4.search an Student by id.
 5.Display all the Student details.
 6.exit.
 Enter your choice of interest : 1

 Enter the name of the Student: Hari

 Enter ID: 123

 Enter CGPA: 8.2

 Student inserted.
 1.Insert an Student.
 2.Delete an Student.
 3.Find the first Student.
 4.search an Student by id.
 5.Display all the Student details.
 6.exit.
 Enter your choice of interest : 1

 Enter the name of the Student: Mani

 Enter ID: 124

 Enter CGPA: 9.3

 Student inserted.
 1.Insert an Student.
 2.Delete an Student.
 3.Find the first Student.
 4.search an Student by id.
 5.Display all the Student details.
 6.exit.
 Enter your choice of interest : 1

 Enter the name of the Student: Guna

 Enter ID: 125

 Enter CGPA: 9.5

 Student inserted.
 1.Insert an Student.
 2.Delete an Student.
 3.Find the first Student.
 4.search an Student by id.
 5.Display all the Student details.
 6.exit.
 Enter your choice of interest : 3
123      Hari    8.2
 1.Insert an Student.
 2.Delete an Student.
 3.Find the first Student.
 4.search an Student by id.
 5.Display all the Student details.
 6.exit.
 Enter your choice of interest : 4

 Enter the id of the Student to be searched.123
123      Hari    8.2
 Student details present.
 1.Insert an Student.
 2.Delete an Student.
 3.Find the first Student.
 4.search an Student by id.
 5.Display all the Student details.
 6.exit.
 Enter your choice of interest : 5

 ID      Name    CGPA
 123        Hari    8.2
 124        Mani    9.3
 125        Guna    9.5
 1.Insert an Student.
 2.Delete an Student.
 3.Find the first Student.
 4.search an Student by id.
 5.Display all the Student details.
 6.exit.
 Enter your choice of interest : 6

[19bcs150@mepcolinux ex8]$exit
exit
Script done on Mon 22 Feb 2021 08:04:41 PM IST
